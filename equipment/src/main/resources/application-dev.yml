spring:
  datasource:
    url: jdbc:p6spy:mysql://wifi.stormbirds.cn:3306/shared_power_bank?useLegacyDatetimeCode=false&serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf8
    username: stormbirds
    password: HL2fKA+Yfy9osIzASIlYJPhgUcn3oUsGcb8s5y5HqS8+XP1tiOp4+p2AjrXROAtK3AocqVyQhy8IN8OQHeDnmA==
    driverClassName: com.p6spy.engine.spy.P6SpyDriver
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      dbType: mysql
      #初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
      initial-size: 1
      #最大连接池数量
      max-active: 8
      #最小连接池数量
      min-idle: 1
      #获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
      max-wait: 60000
      #是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
      pool-prepared-statements: false
      #要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
      max-pool-prepared-statement-per-connection-size: -1
      #用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用。
      validation-query: SELECT 1
      #单位：秒，检测连接是否有效的超时时间。底层调用jdbc Statement对象的void setQueryTimeout(int seconds)方法
      validation-query-timeout: 10
      #申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      test-on-borrow: false
      #归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      test-on-return: false
      #建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      test-while-idle: true
      #有两个含义：
      #1) Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接。
      #2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
      time-between-eviction-runs-millis: 60000
      #配置一个连接在池中最小、最大生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 300000
      max-evictable-idle-time-millis: 600000
      # 公钥
      publickey: MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAKpJmXuC60BHjGFRnKpaSb+nK+RFV5ypzNbdOV3gfRot1Ml46fy44D+90q3TGv+4xmkGYTMKAr3o/L/fAIXI15kCAwEAAQ==
      # 配置 connection-properties，启用加密，配置公钥。
      connection-properties: config.decrypt=true;config.decrypt.key=${spring.datasource.druid.public-key};druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      #配置多个英文逗号分隔
      filters: stat,wall,config
      web-stat-filter:
        enabled: true
        exclusions: '*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*'
        stat-view-servlet:
          enabled: true
          reset-enable: false
          url-pattern: /druid/*
          login-username: admin
          login-password: admin
        filter:
          slf4j:
            enabled: true
            statement-create-after-log-enabled: false
            statement-close-after-log-enabled: false
            result-set-open-after-log-enabled: false
            result-set-close-after-log-enabled: false

  resources:
    static-locations: classpath:/templates/

  redis:
    host: wifi.stormbirds.cn
    port: 6379
    # Redis单机部署默认情况下有16个分片，这里配置具体使用的分片
    password: z7zg08KUTQDa
    database: 0
    # 连接超时时间（记得添加单位，Duration）
    timeout: 8000ms
    lettuce:
      pool:
        # 连接池最大连接数（使用负值表示没有限制） 默认 8
        max-active: 8
        # 连接池最大阻塞等待时间（使用负值表示没有限制） 默认 -1
        max-wait: 6000ms
        # 连接池中的最大空闲连接 默认 8
        max-idle: 100
        # 连接池中的最小空闲连接 默认 0
        min-idle: 50
  cache:
    # 一般来说是不用配置的，Spring Cache 会根据依赖的包自行装配
    type: redis
    redis:
      time-to-live.seconds: 3600

# Nacos配置中心服务地址
nacos:
  config:
    server-addr: wifi.stormbirds.cn:8848
    data-id: shared_power_bank_web-dev.properties
    group: DEFAULT_GROUP
    type: properties
    bootstrap.enable: true
    enable-remote-sync-config: true
    namespace: 7f1093be-cc98-4dac-abd0-fd101bbf6de8


## Nacos服务管理中心
dubbo:
  application:
    name: shared_power_bank_equipment
  registry:
    address: nacos://wifi.stormbirds.cn:8848
  scan:
    base-packages: cn.stormbirds.sharedcharging.equipment.service.impl
  protocol:
    name: dubbo
    port: -1

users:
  service:
    version: 0.1.0
equipment:
  service:
    version:  0.1.0
    address: wifi.stormbirds.cn


